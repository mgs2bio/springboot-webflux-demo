# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
env:
  IMAGE_NAME: mgs2bio/springboot-webflux-demo

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Docker
      run: |
          brew update
          brew install docker
          colima start
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    # Docker build & push
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2  
      if: github.ref == 'refs/heads/master'
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      if: github.ref == 'refs/heads/master'
    -
      name: Login to Docker Hub
      uses: docker/login-action@v2
      if: github.ref == 'refs/heads/master'
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Check outputs
      run: echo ${{ steps.vars.outputs.sha_short }}
  -
      name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .  
        push: ${{ github.ref == 'refs/heads/master' }}
        tags: ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}

  UpdateTheVersion:
    needs: build
    name: 'Update Docker image version'
    runs-on: ubuntu-latest
    # Runs only when the PR has been merged
    if: github.event.pull_request.merged

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with: 
        repository: https://github.com/mgs2bio/argocd-ci-config.git

    # Updates the image version in the deployment manifest
    - name: Update the version
      run: sed -i "17s/\(springboot-webflux-demo:\).*/\1${GITHUB_SHA::7}/" ./webflux-demo/springboot-webflux.yml

    # Commits the change
    - name: Commit files 
      run: |
        git config --local user.email "ci-mgs2bio@gmail.com"
        git config --local user.name "ci"
        git status
        git add ./webflux-demo
        git commit -m "Updated the version of the Docker image"
    # Pushes the updated file to the repo
    - name: Push changes 
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.MY_GITHUB_TOEKN }}
        force: true
